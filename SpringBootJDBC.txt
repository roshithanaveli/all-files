app.controller/SpringBootJDBCController.java


package app.controller;

import org.springframework.web.bind.annotation.RestController;

import app.dao.StudentDAO;
import app.model.Student;
import java.util.Iterator;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

@RestController
public class SpringBootJDBCController {

	@Autowired
	private StudentDAO dao;

	@RequestMapping("/jdbc")
	public String welcome() {
		return "Spring Boot Home Page";
	}

	@RequestMapping("/insert")
	public String insert(@RequestParam("sno") int sno, @RequestParam("name") String name,
			@RequestParam("address") String adr) {
		System.out.println(" ************** Inside Method ************");

		dao.addStudent(sno, name, adr);
		return "Data Inserted";
	}

	@RequestMapping("/select")
	public String select() {
		
		String result="";
		
		List<Student> list = dao.findAll();
		Iterator<Student> itr = list.iterator();
		while (itr.hasNext()) {
			Student s = (Student) itr.next();
			result = result+ s.getSno()+", ";
			result = result+ s.getName()+", ";
			result = result+ s.getAddress()+" <br>";
		}
		System.out.println("Result : "+result);
		return result;
	}
}

app.dao.StudentDAO.java
------------------------
package app.dao;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;
import app.model.Student;

@Repository
public class StudentDAO {

	@Autowired
	private JdbcTemplate template;

	public List<Student> findAll() {

		List<Student> result = template.query("SELECT sno,name, address FROM Student",
				(rs, rowNum) -> new Student(rs.getInt("sno"), rs.getString("name"), rs.getString("address")));
		return result;

	}

	public void addStudent(int sno, String name, String address) {
		template.update("INSERT INTO Student(sno,name, address) VALUES (?,?,?)", sno, name, address);
	}

	/*
	 * public List<Student> findAll() {
	 * 
	 * List<Student> result = template.query(
	 * "SELECT sno,name, address FROM Student", new StudentRowMapper()); return
	 * result;
	 * 
	 * }
	 * 
	 * public void addStudent(int sno, String name, String address) {
	 * template.update("INSERT INTO Student(sno,name, address) VALUES (?,?,?)",
	 * sno, name, address); }
	 */

}

package app.dao;
----------------
import java.sql.ResultSet;
import java.sql.SQLException;
import org.springframework.jdbc.core.RowMapper;
import app.model.Student;
public class StudentRowMapper implements RowMapper<Student> {
	@Override
	public Student mapRow(ResultSet rs, int rowno) throws SQLException {
		// TODO Auto-generated method stub
		Student s = new Student();
		s.setSno(rs.getInt("sno"));
		s.setName(rs.getString("name"));
		s.setAddress(rs.getString("address"));
		return s;
	}
}


package app.model;
-------------------
public class Student {
	private int sno;
	private String name;
	private String address;

	public Student() {
		super();
	}

	public Student(int sno, String name, String address) {
		super();
		this.sno = sno;
		this.name = name;
		this.address = address;
	}

	public int getSno() {
		return sno;
	}

	public void setSno(int sno) {
		this.sno = sno;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

}

package app;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class SpringBootApp {
	public static void main(String[] args) {
		 SpringApplication.run(SpringBootApp.class, args);
	}
}


\resources\static\index.html
-----------------------------

<a href="/select">SELECT</a><br />

<h1>Insert Form</h1>
<form action="/insert">
	Sno: <input name="sno" type="text" /> <br> 
	Name: <input name="name" type="text" /> <br> 
	Address: <input name="address" type="text" /> <br> 
	<input type="submit" value="INSERT" /> <br>
</form>
</body>
</html>


application.properties
----------------------
spring.datasource.url=jdbc:mysql://localhost:3306/test?useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver


pom.xml
-------

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.smlcodes</groupId>
	<artifactId>SpringBoot_JDBC</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.6.RELEASE</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

	</dependencies>

	<properties>
		<java.version>1.8</java.version>
	</properties>

</project>



