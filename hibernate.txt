package com.jpas;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.boot.Metadata;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.cfg.Configuration;
public class DataMain {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		try(Session session = HibernateUtils.getSessionFactory().openSession()){
			String sql = "select version()";
					String result =(String) session.createNativeQuery(sql).getSingleResult();
					System.out.println(result);
		}
		catch(Exception e) {
			e.printStackTrace();
		}

	}

}



<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-configuration SYSTEM "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
 
<hibernate-configuration>
    <session-factory>
        <property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
        <property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
        <property name="hibernate.connection.username">root</property>
        <property name="hibernate.connection.password">admin</property>
        <property name="hibernate.connection.url">jdbc:mysql://localhost:3306/test</property>
        <property name="show_sql">true</property>
        <property name="format_sql">false</property>
        <mapping resource="students.hbm.xml"/>
        <!--<mapping class="com.websystique.hibernate.model.Student"/>-->
    </session-factory>
</hibernate-configuration>



package com.jpas;

import org.hibernate.SessionFactory;
import org.hibernate.boot.Metadata;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;

public class HibernateUtils {
	public static StandardServiceRegistry standardServiceRegistry;
	public static SessionFactory sessionFactory;
	static {
		if(sessionFactory==null) {
			standardServiceRegistry = new StandardServiceRegistryBuilder().configure().build();
			Metadata meta = new MetadataSources(standardServiceRegistry).getMetadataBuilder().build(); 
			sessionFactory = meta.getSessionFactoryBuilder().build();
		}
	}
	public static SessionFactory getSessionFactory() {
		return sessionFactory;
	}

}



package com.jpas;

public class Students {
	int htno;
	String name;
	String branch;
	public int getHtno() {
		return htno;
	}
	public void setHtno(int htno) {
		this.htno = htno;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getBranch() {
		return branch;
	}
	public void setBranch(String branch) {
		this.branch = branch;
	}
	
	

}


-----------------------------------------------------------------------------

students.hbn.xml
-----------------
<?xml version='1.0' encoding='UTF-8'?>  
<!DOCTYPE hibernate-mapping PUBLIC  
 "-//Hibernate/Hibernate Mapping DTD 5.3//EN"  
 "http://hibernate.sourceforge.net/hibernate-mapping-5.3.dtd">  
  
 <hibernate-mapping>  
  <class name="database.Students" table="students">  
    <id name="htno">  
     <generator class="assigned"></generator>  
    </id>  
            
    <property name="name" value="Student name"></property>  
    <property name="branch" value="branch"></property>  
            
  </class>  
            
 </hibernate-mapping>

public class DataPull {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Configuration cfg = new Configuration();
		cfg.configure("hibernate.cfg.xml");
		SessionFactory factory = cfg.buildSessionFactory();
		Session session = factory.openSession();
		Students bo = new Students();
		bo.setHtno(1991); 
		bo.setName("Kamal");
		bo.setBranch("Chennai");
		Transaction tx = session.beginTransaction();
		
		session.saveOrUpdate(bo);
		System.out.println("Employee Data saved successfully.....!!");
		tx.commit();
		session.close();
		factory.close();

	}


